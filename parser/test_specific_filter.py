#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–æ–π —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ç–æ–ª—å–∫–æ —Ç—Ä—É–± –í–ì–ü
"""

import asyncio
import os
from parser_23MET import ParserSite_23MET

async def test_tube_filtering():
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ç–æ–ª—å–∫–æ —Ç—Ä—É–± –í–ì–ü
    """
    
    print("=== –¢–µ—Å—Ç —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –¥–ª—è —Ç—Ä—É–± –í–ì–ü ===\n")
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞—Ä—Å–µ—Ä —Å –±–æ–ª–µ–µ —Ç–æ—á–Ω—ã–º —Ñ–∏–ª—å—Ç—Ä–æ–º
    parser = ParserSite_23MET(
        max_rate=100,
        filter_keywords=["—Ç—Ä—É–±–∞ –≤–≥–ø", "—Ç—Ä—É–±–∞ –≤–æ–¥–æ–≥–∞–∑–æ–ø—Ä–æ–≤–æ–¥–Ω–∞—è"],
        filter_mode="any"
    )
    
    print(f"üîç –§–∏–ª—å—Ç—Ä: {parser._ParserSite_23MET__filter_keywords}")
    print(f"üîç –†–µ–∂–∏–º: {parser._ParserSite_23MET__filter_mode}")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–∞—Ä—Å–∏–Ω–≥
    df = await parser.run(
        with_update_sites_info=False,
        with_save_result=True,
        with_remove_intermediate_data=True
    )
    
    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç: {len(df)} –∑–∞–ø–∏—Å–µ–π")
    
    if len(df) > 0:
        print("\nüìã –ü—Ä–∏–º–µ—Ä—ã –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤:")
        unique_names = df['–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ'].unique()[:10]
        for i, name in enumerate(unique_names, 1):
            print(f"  {i}. {name}")
    else:
        print("\n‚ö†Ô∏è –¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã - –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–∏–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞")

if __name__ == "__main__":
    asyncio.run(test_tube_filtering())
