services:
  postgres:
    image: postgres:15-alpine
    container_name: horizons_postgres
    environment:
      POSTGRES_DB: horizons_db
      POSTGRES_USER: horizons_user
      POSTGRES_PASSWORD: horizons_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U horizons_user -d horizons_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - horizons_network

  app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: horizons_app
    environment:
      DATABASE_URL: postgresql://horizons_user:horizons_password@postgres:5432/horizons_db
      SECRET_KEY: 197b2c37c391bed93fe80344fe73b806947a65e36206e05a1a23c2fa12702fe3
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 30
      ALLOWED_ORIGINS: http://localhost:3000,http://10.20.3.39:3000
      PYTHONUNBUFFERED: 1
      PYTHONDONTWRITEBYTECODE: 1
      # Админ пользователь по умолчанию
      ADMIN_EMAIL: admin@horizons.local
      ADMIN_PASSWORD: admin123
      ADMIN_FIRST_NAME: System
      ADMIN_LAST_NAME: Administrator
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ./parser:/app/parser:ro
      - parser_results:/app/parser/results
      - app_logs:/app/logs
    networks:
      - horizons_network

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
      args:
        NODE_ENV: production
    container_name: horizons_frontend
    environment:
      NODE_ENV: production
      REACT_APP_API_URL: http://localhost:8000
    ports:
      - "3000:3000"
    depends_on:
      - app
    restart: unless-stopped
    volumes:
      - frontend_logs:/var/log/nginx
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    networks:
      - horizons_network

volumes:
  postgres_data:
    driver: local
  app_logs:
    driver: local
  frontend_logs:
    driver: local
  parser_results:
    driver: local

networks:
  horizons_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16